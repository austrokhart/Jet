class "Класс для работы с тестовыми ситуациями";
import classes Functions.Array;

inclass


  -- создаёт новый экземпляр класса
  func new(_container: UnitTesting.CaseResult): UnitTesting.Case;
    
    result = self.create;
    result._container = _container;

    return result;
  end;

inobject


  var _container: UnitTesting.CaseResult;
  var _inverted: boolean;


  -- возвращает или записывает в результат имя
  func name(_value: string = nil): string;

    if _value <> nil then self._container._name = _value; end;
    return self._container._name;
  end;


  -- возвращает или записывает в результат сообщение
  func comment(_value: string = nil): string;

    if _value <> nil then self._container._comment = _value; end;
    return self._container._comment;
  end;


  -- возвращает объект аналогичный текущему, в котором проверки будут записываться с отрицанием
  func invert: UnitTesting.Case;
    
    result = self.new(self._container);
    result._inverted = not self._inverted;

    return result;
  end;


  -- записывает в результат проверку
  func assert_equal(_value, _expected: variant; _comment: string = nil): UnitTesting.Case;

    self._container.add(UnitTesting.Assert.assert_equal(_value, _expected, self._inverted, _comment));
    return self;
  end;


  -- записывает в результат проверку
  func assert_true(_value: variant; _comment: string = nil): UnitTesting.Case;

    self._container.add(UnitTesting.Assert.assert_true(_value, self._inverted, _comment));
    return self;
  end;


  -- записывает в результат проверку
  func assert_false(_value: variant; _comment: string = nil): UnitTesting.Case;

    self._container.add(UnitTesting.Assert.assert_false(_value, self._inverted, _comment));
    return self;
  end;
end