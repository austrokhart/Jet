class "Класс для работы с тестовыми ситуациями";
import classes Functions.Array;

inclass


  -- создаёт новый экземпляр класса
  func new(container: UnitTesting.CaseResult): UnitTesting.Case;
    
    result = self.create;
    result.container = container;

    return result;
  end;

inobject


  var container: UnitTesting.CaseResult;
  var inverted: boolean;


  -- возвращает или записывает в результат имя
  func name(value: string = nil): string;

    if value <> nil then self.container.name = value; end;
    return self.container.name;
  end;


  -- возвращает или записывает в результат сообщение
  func comment(value: string = nil): string;

    if value <> nil then self.container.comment = value; end;
    return self.container.comment;
  end;


  -- возвращает объект аналогичный текущему, в котором проверки будут записываться с отрицанием
  func invert: UnitTesting.Case;
    
    result = self.new(self.container);
    result.inverted = not self.inverted;

    return result;
  end;


  -- записывает в результат проверку
  func assert_equal(value, expected: variant; comment: string = nil): UnitTesting.Case;

    self.container.add(UnitTesting.Assert.assert_equal(value, expected, self.inverted, comment));
    return self;
  end;


  -- записывает в результат проверку
  func assert_true(value: variant; comment: string = nil): UnitTesting.Case;

    self.container.add(UnitTesting.Assert.assert_true(value, self.inverted, comment));
    return self;
  end;


  -- записывает в результат проверку
  func assert_false(value: variant; comment: string = nil): UnitTesting.Case;

    self.container.add(UnitTesting.Assert.assert_false(value, self.inverted, comment));
    return self;
  end;
end