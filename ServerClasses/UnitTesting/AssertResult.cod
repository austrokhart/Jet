class "Класс для хранения результатов проверки";
import classes Functions.Variable, Functions.String, Functions.Array;

inclass


  -- создаёт новый экземпляр класса
  func new(_value, _expected: variant; _comparison: UnitTesting.Assert._comparison_type; _success: boolean; _inverted: boolean = false; _comment: string = ""): UnitTesting.AssertResult;

    result = self.create;

    result._value      = _value;
    result._expected   = _expected;
    result._comparison = _comparison;
    result._success    = _success;
    result._inverted   = _inverted;
    result._comment    = _comment;

    return result;
  end;

inobject


  var _value:      variant;
  var _expected:   variant;
  var _comparison: integer;
  var _success:    boolean;
  var _inverted:   boolean;
  var _comment:    string;


  -- возвращает истину, если проверка является отрицательной
  func is_inverted: boolean;
    
    return self._inverted;
  end;


  -- возвращает истину, если результат успешен
  func is_successful: boolean;
    
    return self._success;
  end;


  -- возвращает текстовое представление проверки
  func to_text: string;

    -- если результат отрицается и отрицательный или если результат не отрицается и положительный
    if (self.is_inverted xor self.is_successful) then
      result = str_format("успех ({})", [self._comment]);

    else
      result = str_format("неудача; получено: {}, ожидалось{}: {} ({})", [var_to_dump(self._value), if (self.is_inverted, " не", ""), var_to_dump(self._expected), self._comment]);
    end;

    return result;
  end;
end