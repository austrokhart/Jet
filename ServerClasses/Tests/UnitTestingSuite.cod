class inherited UnitTesting.Suite "Набор для тестирования классов UnitTesting";

inclass


  proc test_a(_case: UnitTesting.Case);

    with _case do

      comment("заведомо удачная тестовая ситуация, основанная на процедуре");

      assert_equal("aa", "aa");
      assert_equal("bb", "bb");
      assert_equal("cc", "cc", "все проверки будут успешными, поэтому этот комментарий не отобразится");
    end;
  end;


  func test_b: UnitTesting.Case;

    result = UnitTesting.Case.new(UnitTesting.CaseResult.new("test_b"));

    with result do

      comment("заведомо удачная тестовая ситуация, основанная на функции");
      comment(comment +" (и незначительное дополнение)");

      assert_equal(10, 10);
      assert_equal(20, 20);
      assert_equal(30, 30, "все проверки снова будут успешными, поэтому этот комментарий не отобразится");
    end;

    return result;
  end;


  proc test_c(_case: UnitTesting.Case);

    _case.comment("заведомо удачная тестовая ситуация с использованием цепочек вызвовов");

    _case
      .assert_equal("aa", "aa")
      .assert_equal("bb", "bb")
      .assert_equal("cc", "cc");

    _case.invert
      .assert_equal("aa", 10)
      .assert_equal("bb", 20)
      .assert_equal("cc", 30);
  end;


  proc test_d(_case: UnitTesting.Case);
    
    with _case do

      comment("заведомо неудачная тестовая ситуация");

      assert_equal("aa", "aa");
      assert_equal("bb", "bb");
      assert_equal("cc", "xx", "здесь проверка будет неудачной");

      invert.assert_equal("aa", 10);
      invert.assert_equal("bb", 20);
      invert.assert_equal("cc", "cc", "здесь проверка тоже будет неудачной");
    end;
  end;
end